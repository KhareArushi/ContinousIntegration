@model ContinousIntegration.Models.ConfigurationModel

@{
    ViewBag.Title = "Index";
}

@using (Html.BeginForm("AccessRoles", "Roles", FormMethod.Post))
{

    <div>
       
            @Html.Label("Users:", new { style = "font-weight:bold ;font-family:Andalus;font-size:20px;"})

            @Html.DropDownListFor(p => p.SelectedUserID, Model.Users, "Select", new
       {
           @class = "form-control",
           style = "width:20%",
           name = "list",
           @onchange = "FillProjectListBoxes()"
       })
         
    </div>
    <br /><br />

    <div id="RolesDiv">
    
         @Html.Label("Roles:", new { style = "font-weight:bold ;font-family:Andalus;font-size:20px;" })
    @Html.DropDownListFor(p => p.SelectedRoleID, Model.Roles, "Select", new
       {
           @class = "form-control",
           style = "width:20%",
           @onchange = "Change(this.value)"           
       })
          
    </div>
    <br /><br />

    <div>
        <table id="tab" style="border: none; border-collapse: collapse;" >
            <tr>
                <td style=" border:none; outline:none;">
                @Html.Label("Projects Available:", new { style = "font-weight:bold ;font-family:Andalus;font-size:20px" })</td>
                <td style="border: none; outline: none;">&nbsp; &nbsp;&nbsp;</td>
                <td style="border: none; outline: none;">@Html.Label("Projects Assigned:", new { style = "font-weight:bold ;font-family:Andalus;font-size:20px" })</td>
            </tr>

                <tr>
                    <td style="border: none; outline: none;">
                        @Html.ListBoxFor(p => p.ProjectsAvailable, Model.AvailableProjects, new { @class = "form-control", style = "width: 200px; height: 140px;" })
                    </td>

                    <td style="border: none; outline: none;">
                        <button class="btn btn-primary" type="submit" id="btnAdd" style="width:60px;height:30px;">> </button><br />
                        <button class="btn btn-primary" type="submit" id="btnAddAll" style="width: 60px; height: 30px;">>></button><br />
                        <button class="btn btn-primary" type="submit" id="btnRemove" style="width: 60px; height: 30px;"> <</button><br />
                        <button class="btn btn-primary" type="submit" id="btnRemoveAll" style="width:60px; height: 30px;"><<</button>
                    </td>

                    <td style="border: none; outline: none;">
                        @Html.ListBoxFor(p => p.ProjectsAssigned, Model.AssignedProjects, new { @class = "form-control", style = "width: 200px; height: 140px;" })
                    </td>
                </tr>
            </table>
    </div>
    <br />
    <button class="btn  btn-primary" type="button" id="submit" onclick="SaveProjectDetails()">Submit</button>


    //Script to swap values 
    <script type="text/javascript">
        $("#tab").hide();
        $('#RolesDiv').hide();
        $(document).ready(
            function () {
                $('#btnAdd').click(
               function (event) {
                   $('#ProjectsAvailable > option:selected').appendTo('#ProjectsAssigned');
                   event.preventDefault();
               });

                $('#btnAddAll').click(
                function (event) {
                    $('#ProjectsAvailable > option').appendTo('#ProjectsAssigned');
                    event.preventDefault();
                });

                $('#btnRemove').click(
                function (event) {
                    $('#ProjectsAssigned > option:selected').appendTo('#ProjectsAvailable');
                    event.preventDefault();
                });

                $('#btnRemoveAll').click(
                function (event) {
                    $('#ProjectsAssigned > option').appendTo('#ProjectsAvailable');
                    event.preventDefault();
                });
            });


             //code to hide listbox when admin is checked
        function Change(roleId) {
            
            if (roleId == 1) {                
                $("#tab").hide();
            }
            else if(roleId ==2){               
                $("#tab").show();
            }
            else {
                $("#tab").hide();
            }
        }

        //Ajax method to get the data from GetRoleID controller
        function FillProjectListBoxes() {
            
            var userID = $('#SelectedUserID').val();
         
            if (userID == "")
            {
                $("#tab").hide();
                $('#RolesDiv').hide();
                $('#submit').hide();
                return false;
            }
            else
            {
                $("#tab").show();
                $('#RolesDiv').show();
                $('#submit').show();
            }

            $.ajax({
                url: '/Roles/GetConfigurationDetails',
                type: 'GET',
                dataType: 'JSON',
                data: { userId: userID },
                success: function (configurationDetails) {
                    $('#ProjectsAssigned').empty();
                   
                    //populating project details in ProjectsAssigned Listbox
                    $.each(configurationDetails.AssignedProjects, function (value, index) {
                        ($('<option>').text(index.Text).val(index.Value)).appendTo('#ProjectsAssigned');
                    });

                    //populating project details in ProjectsAvailable Listbox
                    $('#ProjectsAvailable').empty();
                    $.each(configurationDetails.AvailableProjects, function (value, index) {
                        ($('<option>').text(index.Text).val(index.Value)).appendTo('#ProjectsAvailable');
                    });

                    //checking role id for radioutton to be checked
                    if (configurationDetails.RoleId == 1) {
                        $("#SelectedRoleID").val("1");
                    }
                    else if (configurationDetails.RoleId == 2) {
                       
                        $("#SelectedRoleID").val("2");
                    }
                    else
                    {
                        $("#SelectedRoleID").val("");
                    }
                    Change(configurationDetails.RoleId);
                },
                error: function (exception) {
              
                    var responseMessage = jQuery.parseJSON(exception.responseText);
                    alert("Message: " + responseMessage.Message);
                    alert("StackTrace: " + responseMessage.StackTrace);
                    alert("ExceptionType: " + responseMessage.ExceptionType);
                }
            });

            
        }

        //Ajax call to send user selected data to controller
        function SaveProjectDetails() {
            //array for getting project details which are in  ProjectsAssigned listbox
            var assignedValues = [];
            $('#ProjectsAssigned option').each(function (counter, index) {
                assignedValues[counter] = $(index).val();
            });

            //array for getting project details which are in  ProjectsAvailable listbox
            var availableValues = [];
            $('#ProjectsAvailable option').each(function (counter, index) {
                availableValues[counter] = $(index).val();
            });

            //json object to send to the controller
            var projectDetails = JSON.stringify({

                'SelectedUserID': $('#SelectedUserID').val(),
                'SelectedRoleID': $('#SelectedRoleID').val(),
                'ProjectsAssigned': assignedValues,
                'ProjectsAvailable': availableValues
            });

            $.ajax({

                url: '/Roles/AccessRoles',
                type: 'POST',
                contentType: 'application/json',
                dataType: 'JSON',
                data: projectDetails,

                success: function (isSuccess) {

                    if (isSuccess == true) {
                        alert("Changes saved successfully.");
                    }
                    else {
                        alert("Please Assign thre Roles first");
                    }
                },
                error: function (ex) {
                    alert("There was some problem while saving.");
                    var responseText = jQuery.parseJSON(ex.responseText);
                    alert("Message: " + responseMessage.Message);
                    alert("StackTrace: " + responseMessage.StackTrace);
                    alert("ExceptionType: " + responseMessage.ExceptionType);
                }
            });
        }
    </script>
}
